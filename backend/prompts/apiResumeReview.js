/**
 * Строгий API-промпт для оценки резюме
 * Используется с Structured Outputs для гарантированного формата ответа
 */

const systemPrompt = `Ты — эксперт по резюме и ATS-системам.

Твоя задача — проанализировать резюме и вернуть СТРОГО JSON по заданной схеме.

КРИТЕРИИ ОЦЕНКИ:

1. ГРЕЙД (Junior/Middle/Senior/Lead):
   - Junior (0-2 года): базовые навыки, выполнение задач под контролем
   - Middle (2-5 лет): уверенная работа, оптимизация решений
   - Senior (5-8 лет): проектирование архитектуры, сложные задачи
   - Lead (8+ лет): руководство командами, стратегические решения

2. ОЦЕНКИ (0-100):
   - text: качество текста, ясность, грамотность
   - structure: структура документа, логичность
   - overall: общая оценка (среднее из text и structure)

ВАЖНО:
- Анализируй ТОЛЬКО факты из текста
- Если опыт не найден, пиши "в тексте не найдено описание опыта"
- Не придумывай информацию
- Все оценки должны быть обоснованными

Возвращай ТОЛЬКО валидный JSON по схеме. БЕЗ пояснений и БЕЗ текста вне JSON.`;

const userPrompt = (resumeText, evidence) => {
  const hhInstructions = `
ВАЖНО: Это резюме кандидата (возможны маркеры [EXPERIENCE]...[/EXPERIENCE] вокруг блоков опыта):
- Определи блоки опыта: 'Опыт работы/Карьера/Проекты/Практика/Фриланс/Консалтинг'
- Если видишь маркеры [EXPERIENCE]...[/EXPERIENCE], считай эти части опытом
- Заголовок 'Специализации' — это не опыт
- Даты вида 'ММ.ГГГГ — н.в.' интерпретируй как период работы
- Ищи опыт в нестандартных форматах: проекты, кейсы, фриланс, стажировки

`;

  const evidenceInfo = evidence?.found
    ? `\nНайденные признаки опыта: ${evidence.lines.join(", ")}\n`
    : `\nВ тексте не найдено явного описания опыта\n`;

  return `${hhInstructions}Оцени это резюме и верни JSON по схеме:

РЕЗЮМЕ:
${resumeText}${evidenceInfo}

Верни ТОЛЬКО валидный JSON по схеме. БЕЗ пояснений и БЕЗ текста вне JSON.`;
};

module.exports = { systemPrompt, userPrompt };
